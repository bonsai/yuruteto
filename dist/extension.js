(()=>{"use strict";var t={265:function(t,n,e){var i,r=this&&this.__createBinding||(Object.create?function(t,n,e,i){void 0===i&&(i=e);var r=Object.getOwnPropertyDescriptor(n,e);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,i,r)}:function(t,n,e,i){void 0===i&&(i=e),t[i]=n[e]}),o=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,"default",{enumerable:!0,value:n})}:function(t,n){t.default=n}),a=this&&this.__importStar||(i=function(t){return i=Object.getOwnPropertyNames||function(t){var n=[];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[n.length]=e);return n},i(t)},function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e=i(t),a=0;a<e.length;a++)"default"!==e[a]&&r(n,t,e[a]);return o(n,t),n});Object.defineProperty(n,"__esModule",{value:!0}),n.activate=function(t){console.log('Congratulations, your extension "yuruteto" is now active!');const n=c.commands.registerCommand("yuruteto.startTetris",()=>{s.createOrShow(t.extensionUri)});t.subscriptions.push(n)},n.deactivate=function(){};const c=a(e(398));class s{static currentPanel;static viewType="tetris";_panel;_extensionUri;_disposables=[];static createOrShow(t){const n=c.window.activeTextEditor?c.window.activeTextEditor.viewColumn:void 0;if(s.currentPanel)return void s.currentPanel._panel.reveal(n);const e=c.window.createWebviewPanel(s.viewType,"Tetris Game",n||c.ViewColumn.One,{enableScripts:!0,localResourceRoots:[c.Uri.joinPath(t,"media")]});s.currentPanel=new s(e,t)}constructor(t,n){this._panel=t,this._extensionUri=n,this._update(),this._panel.onDidDispose(()=>this.dispose(),null,this._disposables),this._panel.webview.onDidReceiveMessage(t=>{"alert"!==t.command||c.window.showErrorMessage(t.text)},null,this._disposables)}dispose(){for(s.currentPanel=void 0,this._panel.dispose();this._disposables.length;){const t=this._disposables.pop();t&&t.dispose()}}_update(){const t=this._panel.webview;this._panel.title="Tetris Game",this._panel.webview.html=this._getHtmlForWebview(t)}_getHtmlForWebview(t){return`<!DOCTYPE html>\n<html lang="en">\n<head>\n\t<meta charset="UTF-8">\n\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t<title>Tetris Game</title>\n\t<style>\n\t\tbody {\n\t\t\tfont-family: var(--vscode-font-family);\n\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\tcolor: var(--vscode-editor-foreground);\n\t\t\tmargin: 0;\n\t\t\tpadding: 20px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tmin-height: 100vh;\n\t\t}\n\t\t\n\t\t.game-container {\n\t\t\tdisplay: flex;\n\t\t\tgap: 20px;\n\t\t\talign-items: flex-start;\n\t\t}\n\t\t\n\t\t.game-board {\n\t\t\tborder: 2px solid var(--vscode-panel-border);\n\t\t\tbackground-color: #000;\n\t\t}\n\t\t\n\t\t.game-info {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 10px;\n\t\t\tmin-width: 150px;\n\t\t}\n\t\t\n\t\t.info-panel {\n\t\t\tbackground-color: var(--vscode-panel-background);\n\t\t\tborder: 1px solid var(--vscode-panel-border);\n\t\t\tpadding: 10px;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t\n\t\t.controls {\n\t\t\tfont-size: 12px;\n\t\t\tline-height: 1.4;\n\t\t}\n\t\t\n\t\tbutton {\n\t\t\tbackground-color: var(--vscode-button-background);\n\t\t\tcolor: var(--vscode-button-foreground);\n\t\t\tborder: none;\n\t\t\tpadding: 8px 16px;\n\t\t\tborder-radius: 4px;\n\t\t\tcursor: pointer;\n\t\t\twidth: 100%;\n\t\t\tmargin-top: 10px;\n\t\t}\n\t\t\n\t\tbutton:hover {\n\t\t\tbackground-color: var(--vscode-button-hoverBackground);\n\t\t}\n\t\t\n\t\t.score, .level, .lines {\n\t\t\tmargin: 5px 0;\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\t.audio-controls {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 10px;\n\t\t\tmargin-top: 10px;\n\t\t}\n\n\t\t.audio-controls button {\n\t\t\twidth: auto;\n\t\t\tpadding: 4px 8px;\n\t\t\tmargin: 0;\n\t\t}\n\n\t\t.volume-control {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 5px;\n\t\t\tmargin-top: 5px;\n\t\t}\n\n\t\t.volume-control input {\n\t\t\twidth: 80px;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class="game-container">\n\t\t<canvas id="gameCanvas" class="game-board" width="300" height="600"></canvas>\n\t\t<div class="game-info">\n\t\t\t<div class="info-panel">\n\t\t\t\t<div class="score">Score: <span id="score">0</span></div>\n\t\t\t\t<div class="level">Level: <span id="level">1</span></div>\n\t\t\t\t<div class="lines">Lines: <span id="lines">0</span></div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class="info-panel">\n\t\t\t\t<h4>Next Piece</h4>\n\t\t\t\t<canvas id="nextCanvas" width="120" height="120"></canvas>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class="info-panel controls">\n\t\t\t\t<h4>Controls</h4>\n\t\t\t\t<div>‚Üê ‚Üí : Move</div>\n\t\t\t\t<div>‚Üì : Soft Drop</div>\n\t\t\t\t<div>‚Üë : Rotate</div>\n\t\t\t\t<div>Space : Hard Drop</div>\n\t\t\t\t<div>P : Pause</div>\n\t\t\t</div>\n\n\t\t\t<div class="info-panel">\n\t\t\t\t<h4>üéµ BGM</h4>\n\t\t\t\t<div class="audio-controls">\n\t\t\t\t\t<button id="playPauseBtn">üéµ Play</button>\n\t\t\t\t\t<button id="stopBtn">‚èπÔ∏è Stop</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="volume-control">\n\t\t\t\t\t<span>Volume:</span>\n\t\t\t\t\t<input type="range" id="volumeSlider" min="0" max="100" value="30">\n\t\t\t\t\t<span id="volumeValue">30%</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button id="startButton">Start Game</button>\n\t\t\t<button id="pauseButton">Pause</button>\n\t\t\t<button id="resetButton">Reset</button>\n\t\t</div>\n\t</div>\n\n\t\x3c!-- BGM Audio Element --\x3e\n\t<audio id="bgmAudio" loop preload="auto">\n\t\t<source src="${t.asWebviewUri(c.Uri.joinPath(this._extensionUri,"media","suno.bgm.mp3"))}" type="audio/mpeg">\n\t\tYour browser does not support the audio element.\n\t</audio>\n\n\t<script>\n\t\tconst canvas = document.getElementById('gameCanvas');\n\t\tconst ctx = canvas.getContext('2d');\n\t\tconst nextCanvas = document.getElementById('nextCanvas');\n\t\tconst nextCtx = nextCanvas.getContext('2d');\n\t\t\n\t\t// BGM Controls\n\t\tconst bgmAudio = document.getElementById('bgmAudio');\n\t\tconst playPauseBtn = document.getElementById('playPauseBtn');\n\t\tconst stopBtn = document.getElementById('stopBtn');\n\t\tconst volumeSlider = document.getElementById('volumeSlider');\n\t\tconst volumeValue = document.getElementById('volumeValue');\n\t\t\n\t\t// Set initial volume\n\t\tbgmAudio.volume = 0.3;\n\t\t\n\t\t// BGM Control Handlers\n\t\tplayPauseBtn.addEventListener('click', () => {\n\t\t\tif (bgmAudio.paused) {\n\t\t\t\tbgmAudio.play().then(() => {\n\t\t\t\t\tplayPauseBtn.textContent = '‚è∏Ô∏è Pause';\n\t\t\t\t}).catch(e => {\n\t\t\t\t\tconsole.log('Audio play failed:', e);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tbgmAudio.pause();\n\t\t\t\tplayPauseBtn.textContent = 'üéµ Play';\n\t\t\t}\n\t\t});\n\t\t\n\t\tstopBtn.addEventListener('click', () => {\n\t\t\tbgmAudio.pause();\n\t\t\tbgmAudio.currentTime = 0;\n\t\t\tplayPauseBtn.textContent = 'üéµ Play';\n\t\t});\n\t\t\n\t\tvolumeSlider.addEventListener('input', (e) => {\n\t\t\tconst volume = e.target.value / 100;\n\t\t\tbgmAudio.volume = volume;\n\t\t\tvolumeValue.textContent = e.target.value + '%';\n\t\t});\n\t\t\n\t\t// Auto-play BGM when game starts (with user interaction)\n\t\tlet bgmStarted = false;\n\t\t\n\t\tconst BOARD_WIDTH = 10;\n\t\tconst BOARD_HEIGHT = 20;\n\t\tconst BLOCK_SIZE = 30;\n\t\t\n\t\t// Tetris pieces (tetrominoes)\n\t\tconst PIECES = [\n\t\t\t// I piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// O piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[0, 1, 1, 0],\n\t\t\t\t[0, 1, 1, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// T piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[0, 1, 0, 0],\n\t\t\t\t[1, 1, 1, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// S piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[0, 1, 1, 0],\n\t\t\t\t[1, 1, 0, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// Z piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[1, 1, 0, 0],\n\t\t\t\t[0, 1, 1, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// J piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[1, 0, 0, 0],\n\t\t\t\t[1, 1, 1, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t],\n\t\t\t// L piece\n\t\t\t[\n\t\t\t\t[0, 0, 0, 0],\n\t\t\t\t[0, 0, 1, 0],\n\t\t\t\t[1, 1, 1, 0],\n\t\t\t\t[0, 0, 0, 0]\n\t\t\t]\n\t\t];\n\t\t\n\t\tconst COLORS = [\n\t\t\t'#00FFFF', // I - Cyan\n\t\t\t'#FFFF00', // O - Yellow\n\t\t\t'#800080', // T - Purple\n\t\t\t'#00FF00', // S - Green\n\t\t\t'#FF0000', // Z - Red\n\t\t\t'#0000FF', // J - Blue\n\t\t\t'#FFA500'  // L - Orange\n\t\t];\n\t\t\n\t\tlet board = [];\n\t\tlet currentPiece = null;\n\t\tlet nextPiece = null;\n\t\tlet currentX = 0;\n\t\tlet currentY = 0;\n\t\tlet score = 0;\n\t\tlet level = 1;\n\t\tlet lines = 0;\n\t\tlet gameRunning = false;\n\t\tlet gameLoop = null;\n\t\tlet dropTime = 0;\n\t\tlet lastTime = 0;\n\t\t\n\t\t// Initialize game board\n\t\tfunction initBoard() {\n\t\t\tboard = Array(BOARD_HEIGHT).fill().map(() => Array(BOARD_WIDTH).fill(0));\n\t\t}\n\t\t\n\t\t// Create new piece\n\t\tfunction createPiece() {\n\t\t\tconst pieceIndex = Math.floor(Math.random() * PIECES.length);\n\t\t\treturn {\n\t\t\t\tshape: PIECES[pieceIndex],\n\t\t\t\tcolor: pieceIndex,\n\t\t\t\trotation: 0\n\t\t\t};\n\t\t}\n\t\t\n\t\t// Rotate piece matrix\n\t\tfunction rotatePiece(piece) {\n\t\t\tconst rotated = piece.shape[0].map((_, i) =>\n\t\t\t\tpiece.shape.map(row => row[i]).reverse()\n\t\t\t);\n\t\t\treturn { ...piece, shape: rotated };\n\t\t}\n\t\t\n\t\t// Check if piece can be placed at position\n\t\tfunction isValidPosition(piece, x, y) {\n\t\t\tfor (let py = 0; py < 4; py++) {\n\t\t\t\tfor (let px = 0; px < 4; px++) {\n\t\t\t\t\tif (piece.shape[py][px]) {\n\t\t\t\t\t\tconst newX = x + px;\n\t\t\t\t\t\tconst newY = y + py;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (newX < 0 || newX >= BOARD_WIDTH || \n\t\t\t\t\t\t\tnewY >= BOARD_HEIGHT || \n\t\t\t\t\t\t\t(newY >= 0 && board[newY][newX])) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Place piece on board\n\t\tfunction placePiece() {\n\t\t\tfor (let py = 0; py < 4; py++) {\n\t\t\t\tfor (let px = 0; px < 4; px++) {\n\t\t\t\t\tif (currentPiece.shape[py][px]) {\n\t\t\t\t\t\tconst x = currentX + px;\n\t\t\t\t\t\tconst y = currentY + py;\n\t\t\t\t\t\tif (y >= 0) {\n\t\t\t\t\t\t\tboard[y][x] = currentPiece.color + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Clear completed lines\n\t\tfunction clearLines() {\n\t\t\tlet linesCleared = 0;\n\t\t\tfor (let y = BOARD_HEIGHT - 1; y >= 0; y--) {\n\t\t\t\tif (board[y].every(cell => cell !== 0)) {\n\t\t\t\t\tboard.splice(y, 1);\n\t\t\t\t\tboard.unshift(Array(BOARD_WIDTH).fill(0));\n\t\t\t\t\tlinesCleared++;\n\t\t\t\t\ty++; // Check this line again\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (linesCleared > 0) {\n\t\t\t\tlines += linesCleared;\n\t\t\t\tscore += linesCleared * 100 * level;\n\t\t\t\tlevel = Math.floor(lines / 10) + 1;\n\t\t\t\tupdateUI();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Move piece down\n\t\tfunction dropPiece() {\n\t\t\tif (isValidPosition(currentPiece, currentX, currentY + 1)) {\n\t\t\t\tcurrentY++;\n\t\t\t} else {\n\t\t\t\tplacePiece();\n\t\t\t\tclearLines();\n\t\t\t\tspawnNewPiece();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Spawn new piece\n\t\tfunction spawnNewPiece() {\n\t\t\tcurrentPiece = nextPiece;\n\t\t\tnextPiece = createPiece();\n\t\t\tcurrentX = Math.floor(BOARD_WIDTH / 2) - 2;\n\t\t\tcurrentY = 0;\n\t\t\t\n\t\t\tif (!isValidPosition(currentPiece, currentX, currentY)) {\n\t\t\t\tgameOver();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Game over\n\t\tfunction gameOver() {\n\t\t\tgameRunning = false;\n\t\t\talert('Game Over! Score: ' + score);\n\t\t}\n\t\t\n\t\t// Update UI elements\n\t\tfunction updateUI() {\n\t\t\tdocument.getElementById('score').textContent = score;\n\t\t\tdocument.getElementById('level').textContent = level;\n\t\t\tdocument.getElementById('lines').textContent = lines;\n\t\t}\n\t\t\n\t\t// Draw block\n\t\tfunction drawBlock(ctx, x, y, color) {\n\t\t\tctx.fillStyle = COLORS[color];\n\t\t\tctx.fillRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n\t\t\tctx.strokeStyle = '#FFF';\n\t\t\tctx.strokeRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n\t\t}\n\t\t\n\t\t// Draw board\n\t\tfunction drawBoard() {\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\n\t\t\tfor (let y = 0; y < BOARD_HEIGHT; y++) {\n\t\t\t\tfor (let x = 0; x < BOARD_WIDTH; x++) {\n\t\t\t\t\tif (board[y][x]) {\n\t\t\t\t\t\tdrawBlock(ctx, x, y, board[y][x] - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Draw current piece\n\t\tfunction drawCurrentPiece() {\n\t\t\tif (currentPiece) {\n\t\t\t\tfor (let py = 0; py < 4; py++) {\n\t\t\t\t\tfor (let px = 0; px < 4; px++) {\n\t\t\t\t\t\tif (currentPiece.shape[py][px]) {\n\t\t\t\t\t\t\tdrawBlock(ctx, currentX + px, currentY + py, currentPiece.color);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Draw next piece\n\t\tfunction drawNextPiece() {\n\t\t\tnextCtx.clearRect(0, 0, nextCanvas.width, nextCanvas.height);\n\t\t\tif (nextPiece) {\n\t\t\t\tfor (let py = 0; py < 4; py++) {\n\t\t\t\t\tfor (let px = 0; px < 4; px++) {\n\t\t\t\t\t\tif (nextPiece.shape[py][px]) {\n\t\t\t\t\t\t\tnextCtx.fillStyle = COLORS[nextPiece.color];\n\t\t\t\t\t\t\tnextCtx.fillRect(px * 20 + 10, py * 20 + 10, 20, 20);\n\t\t\t\t\t\t\tnextCtx.strokeStyle = '#FFF';\n\t\t\t\t\t\t\tnextCtx.strokeRect(px * 20 + 10, py * 20 + 10, 20, 20);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Game loop\n\t\tfunction gameUpdate(time = 0) {\n\t\t\tif (!gameRunning) return;\n\t\t\t\n\t\t\tconst deltaTime = time - lastTime;\n\t\t\tlastTime = time;\n\t\t\tdropTime += deltaTime;\n\t\t\t\n\t\t\tif (dropTime > 1000 / level) {\n\t\t\t\tdropPiece();\n\t\t\t\tdropTime = 0;\n\t\t\t}\n\t\t\t\n\t\t\tdrawBoard();\n\t\t\tdrawCurrentPiece();\n\t\t\tdrawNextPiece();\n\t\t\t\n\t\t\trequestAnimationFrame(gameUpdate);\n\t\t}\n\t\t\n\t\t// Start game\n\t\tfunction startGame() {\n\t\t\tinitBoard();\n\t\t\tscore = 0;\n\t\t\tlevel = 1;\n\t\t\tlines = 0;\n\t\t\tgameRunning = true;\n\t\t\t\n\t\t\tcurrentPiece = createPiece();\n\t\t\tnextPiece = createPiece();\n\t\t\tcurrentX = Math.floor(BOARD_WIDTH / 2) - 2;\n\t\t\tcurrentY = 0;\n\t\t\t\n\t\t\tupdateUI();\n\t\t\t\n\t\t\t// Start BGM when game starts\n\t\t\tif (!bgmStarted) {\n\t\t\t\tbgmAudio.play().then(() => {\n\t\t\t\t\tplayPauseBtn.textContent = '‚è∏Ô∏è Pause';\n\t\t\t\t\tbgmStarted = true;\n\t\t\t\t}).catch(e => {\n\t\t\t\t\tconsole.log('BGM autoplay failed:', e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\trequestAnimationFrame(gameUpdate);\n\t\t}\n\t\t\n\t\t// Pause game\n\t\tfunction pauseGame() {\n\t\t\tgameRunning = !gameRunning;\n\t\t\tif (gameRunning) {\n\t\t\t\trequestAnimationFrame(gameUpdate);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Reset game\n\t\tfunction resetGame() {\n\t\t\tgameRunning = false;\n\t\t\tstartGame();\n\t\t}\n\t\t\n\t\t// Handle keyboard input\n\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\tif (!gameRunning || !currentPiece) return;\n\t\t\t\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tif (isValidPosition(currentPiece, currentX - 1, currentY)) {\n\t\t\t\t\t\tcurrentX--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tif (isValidPosition(currentPiece, currentX + 1, currentY)) {\n\t\t\t\t\t\tcurrentX++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tif (isValidPosition(currentPiece, currentX, currentY + 1)) {\n\t\t\t\t\t\tcurrentY++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tconst rotated = rotatePiece(currentPiece);\n\t\t\t\t\tif (isValidPosition(rotated, currentX, currentY)) {\n\t\t\t\t\t\tcurrentPiece = rotated;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ' ':\n\t\t\t\t\twhile (isValidPosition(currentPiece, currentX, currentY + 1)) {\n\t\t\t\t\t\tcurrentY++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'p':\n\t\t\t\tcase 'P':\n\t\t\t\t\tpauseGame();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Button event listeners\n\t\tdocument.getElementById('startButton').addEventListener('click', startGame);\n\t\tdocument.getElementById('pauseButton').addEventListener('click', pauseGame);\n\t\tdocument.getElementById('resetButton').addEventListener('click', resetGame);\n\t\t\n\t\t// Initialize\n\t\tinitBoard();\n\t\tdrawBoard();\n\t<\/script>\n</body>\n</html>`}}},398:t=>{t.exports=require("vscode")}},n={},e=function e(i){var r=n[i];if(void 0!==r)return r.exports;var o=n[i]={exports:{}};return t[i].call(o.exports,o,o.exports,e),o.exports}(265);module.exports=e})();